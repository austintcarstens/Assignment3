<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="cb17772d-ee12-4408-ae77-94cb45f4e31b" name="Changes" comment="u will need to get 2 inputs (both floating-point numbers). These need to be saved using the BigDecimal class so that all calculations are accurate.&#10;&#10;Loan amount&#10;Interest rate (in floating-point NOT percentage base - so not 7% the input would be .07)&#10;You will then calculate the interest using the BigDecimal methods. (The simple way, not the full loan repayment way).&#10;&#10;interest = loan amount X interest rate&#10;Lastly you will display everything out using the NumberFormat with currency and percentages as needed.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/InterestCalculator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/InterestCalculator.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2ApM26quYfSr2vA7dAboveBM8T1" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="Assignment3" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="InterestCalculator" />
      <module name="AustinCarstens-Assignment3" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cb17772d-ee12-4408-ae77-94cb45f4e31b" name="Changes" comment="" />
      <created>1655701868150</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1655701868150</updated>
    </task>
    <task id="LOCAL-00001" summary="u will need to get 2 inputs (both floating-point numbers). These need to be saved using the BigDecimal class so that all calculations are accurate.&#10;&#10;Loan amount&#10;Interest rate (in floating-point NOT percentage base - so not 7% the input would be .07)&#10;You will then calculate the interest using the BigDecimal methods. (The simple way, not the full loan repayment way).&#10;&#10;interest = loan amount X interest rate&#10;Lastly you will display everything out using the NumberFormat with currency and percentages as needed.">
      <created>1655712889599</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1655712889599</updated>
    </task>
    <task id="LOCAL-00002" summary="u will need to get 2 inputs (both floating-point numbers). These need to be saved using the BigDecimal class so that all calculations are accurate.&#10;&#10;Loan amount&#10;Interest rate (in floating-point NOT percentage base - so not 7% the input would be .07)&#10;You will then calculate the interest using the BigDecimal methods. (The simple way, not the full loan repayment way).&#10;&#10;interest = loan amount X interest rate&#10;Lastly you will display everything out using the NumberFormat with currency and percentages as needed.">
      <created>1655714185011</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1655714185011</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="u will need to get 2 inputs (both floating-point numbers). These need to be saved using the BigDecimal class so that all calculations are accurate.&#10;&#10;Loan amount&#10;Interest rate (in floating-point NOT percentage base - so not 7% the input would be .07)&#10;You will then calculate the interest using the BigDecimal methods. (The simple way, not the full loan repayment way).&#10;&#10;interest = loan amount X interest rate&#10;Lastly you will display everything out using the NumberFormat with currency and percentages as needed." />
    <option name="LAST_COMMIT_MESSAGE" value="u will need to get 2 inputs (both floating-point numbers). These need to be saved using the BigDecimal class so that all calculations are accurate.&#10;&#10;Loan amount&#10;Interest rate (in floating-point NOT percentage base - so not 7% the input would be .07)&#10;You will then calculate the interest using the BigDecimal methods. (The simple way, not the full loan repayment way).&#10;&#10;interest = loan amount X interest rate&#10;Lastly you will display everything out using the NumberFormat with currency and percentages as needed." />
  </component>
</project>